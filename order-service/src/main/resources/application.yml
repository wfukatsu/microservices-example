spring:
  application:
    name: order-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 30000
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: ${REDIS_TIMEOUT:3000ms}
      database: ${REDIS_DATABASE:0}
      jedis:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:20}
          max-idle: ${REDIS_POOL_MAX_IDLE:10}
          min-idle: ${REDIS_POOL_MIN_IDLE:1}
          max-wait: ${REDIS_POOL_MAX_WAIT:3000ms}

server:
  port: ${SERVER_PORT:8080}

# ScalarDB Configuration - Community Edition
scalardb:
  properties: classpath:scalardb.properties

# JWT Security Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds
  issuer: ${JWT_ISSUER:order-service}
  header: Authorization

# Redis Cache Configuration
cache:
  redis:
    enabled: ${CACHE_REDIS_ENABLED:false}

# External service configurations
services:
  inventory:
    url: ${INVENTORY_SERVICE_URL:http://localhost:8081}
    timeout: 30s
    retry:
      max-attempts: 3
      delay: 1s
  payment:
    url: ${PAYMENT_SERVICE_URL:http://localhost:8082}
    timeout: 60s
    retry:
      max-attempts: 3
      delay: 2s
  shipping:
    url: ${SHIPPING_SERVICE_URL:http://localhost:8083}
    timeout: 45s
    retry:
      max-attempts: 3
      delay: 1s

# Order process configuration
order:
  process:
    timeout: 300s # 5åˆ†
    retry:
      max-attempts: 3
      backoff-multiplier: 2
    compensation:
      enabled: true
      async: true
      max-retry: 5
  
  inventory:
    reservation-expiry-hours: 24
  
  payment:
    auto-capture: true
    capture-timeout: 60s
  
  # Configuration for future features
  # analytics:
  #   enabled: false
  #   batch-size: 100

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      inventory-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      payment-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 60s
        sliding-window-size: 10
        minimum-number-of-calls: 5
      shipping-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5
  retry:
    instances:
      inventory-service:
        max-attempts: 3
        wait-duration: 1s
      payment-service:
        max-attempts: 3
        wait-duration: 2s
      shipping-service:
        max-attempts: 3
        wait-duration: 1s

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.scalar.db: INFO
    com.example.order: INFO
    feign: WARN
    org.springframework.security: WARN
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"